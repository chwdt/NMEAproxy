annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
ant.customtasks.libs=JWSAntTasks
application.desc=Sailonline to NMEA TCP proxy
application.homepage=https://sol.brainaid.de/sailonline/toolbox/
application.splash=/home/cw/src/cvs/brainaid/flag/brainaid-logo-256.png
application.title=brainaid NMEA proxy
application.vendor=cw@brainaid.dk
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/NMEAproxy.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.javaws.jar=/usr/lib/jvm/java-6-sun/jre/lib/javaws.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=
# Space-separated list of extra javac options
javac.compilerargs=-Xlint:deprecation -Xlint:unchecked
javac.deprecation=true
javac.external.vm=false
javac.modulepath=
javac.processormodulepath=
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javac.test.modulepath=\
    ${javac.modulepath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.html5=false
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jlink.launcher=false
jlink.launcher.name=NMEAproxy
jnlp.codebase.type=user
jnlp.codebase.url=file:/home/cw/NetBeansProjects/NMEAproxy/dist/
jnlp.codebase.user=https://sol.brainaid.de/sailonline/toolbox/
jnlp.descriptor=application
jnlp.enabled=false
jnlp.icon=/home/cw/src/cvs/brainaid/flag/brainaid-logo-24.png
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=true
jnlp.signing=key
jnlp.signing.alias=Uwe_Bluecher
jnlp.signing.keystore=/home/cw/NetBeansProjects/NMEAproxy/Uwe_Bluecher.jks
# Property libs.absolutelayout.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.absolutelayout.classpath=../../../../usr/lib/netbeans/java1/modules/ext/AbsoluteLayout.jar
# Property libs.beans-binding.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.beans-binding.classpath=../../../../usr/lib/netbeans/java1/modules/ext/beansbinding-1.2.1.jar
# Property libs.toplink.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.toplink.classpath=../../../../usr/lib/netbeans/java1/modules/ext/toplink/toplink-essentials.jar:../../../../usr/lib/netbeans/java1/modules/ext/toplink/toplink-essentials-agent.jar
main.class=net.brainaid.sol.NMEAproxy.NMEAproxy
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=JDK_1.8
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
